# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Wheels

env:
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: 'python -m pytest --pyargs bilby_cython'
  CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x,i686} cp312-macosx* pp3* cp313* *musllinux*"
  CIBW_SKIP: "pp*_i686"

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.20.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build-dist:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools setuptools_scm
        python -m pip install numpy cython
    - name: Build package
      run: |
        python setup.py sdist --verbose
        python -m pip install --debug -vv dist/*
        pip install bilby.cython[test] --find-links dist --pre
        cd ../
        python -m pytest --pyargs bilby_cython
        cd -
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  deploy:

    runs-on: ubuntu-latest
    needs: [ build_wheels, build-dist ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheels-*
        path: dist
        merge-multiple: true
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
        merge-multiple: true
    - name: Gather artifacts
      run: |
        ls
        ls dist
    # - name: Publish test package
    #   if: github.event_name == 'push'
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TRUE_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/
    #     skip_existing: true
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
