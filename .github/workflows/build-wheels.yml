# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Wheels

env:
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: 'python -m pytest --pyargs bilby_cython'
  CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} cp312-macosx* pp3* cp313*"

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.20.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

# jobs:
  # build-linux:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         fetch-tags: true
  #     - uses: RalfG/python-wheels-manylinux-build@v0.4.2
  #       with:
  #         python-versions: 'cp39-cp39 cp310-cp310 cp311-cp311'
  #         build-requirements: 'cython numpy setuptools_scm'
  #         pip-wheel-args: '-v --wheel-dir=wheelhouse --no-deps'
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheelhouse
  #         path: wheelhouse

  # build-other:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [windows-latest, macos-latest]
  #       python-version: ["3.9", "3.10", "3.11", "3.12"]

  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #       fetch-tags: true
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip wheel setuptools setuptools_scm
  #       python -m pip install cython
  #   - name: Build wheel
  #     run: |
  #       python -m pip wheel -v --wheel-dir=wheel --no-deps .
  #   - name: Fix wheel (Mac OS)
  #     if: matrix.os == 'macos-latest'
  #     run: |
  #       python -m pip install delocate
  #       delocate-wheel -v -w wheelhouse wheel/bilby.cython*.whl
  #       rm -rf wheel/build/
  #       cd wheelhouse
  #       python -m pip install -v *
  #   - name: Fix wheel (Windows)
  #     if: matrix.os == 'windows-latest'
  #     run: |
  #       python -m pip install delvewheel
  #       Move-Item wheel wheelhouse
  #       cd wheelhouse
  #       Get-ChildItem -Path . | ForEach-Object {
  #         delvewheel repair -vv --wheel-dir . $_
  #         python -m pip install -v $_
  #       }
  #   - name: Run import tests
  #     run: |
  #       cd ../
  #       python -m pip install pytest lalsuite
  #       python -uc "import bilby_cython; bilby_cython.time.greenwich_mean_sidereal_time(1e9)"
  #       cd -
  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: wheelhouse
  #       path: wheelhouse

  build-dist:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools setuptools_scm
        python -m pip install numpy cython
    - name: Build package
      run: |
        python setup.py sdist --verbose
        python -m pip install --debug -vv dist/*
        pip install bilby.cython[test] --find-links dist --pre
        cd ../
        python -m pytest --pyargs bilby_cython
        cd -
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  deploy:

    runs-on: ubuntu-latest
    needs: [ build_wheels, build-dist ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wheelhouse
        path: dist
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
        merge-multiple: true
    - name: Gather artifacts
      run: |
        ls
        ls dist
#     - name: Publish test package
#       if: github.event_name == 'push'
#       uses: pypa/gh-action-pypi-publish@master
#       with:
#         user: __token__
#         password: ${{ secrets.TRUE_PYPI_API_TOKEN }}
#         repository_url: https://test.pypi.org/legacy/
#         skip_existing: true
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
